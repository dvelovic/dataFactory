{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "testdatafactory431"
		},
		"PartsUnlimited_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'PartsUnlimited'"
		},
		"StorageForDataLake_properties_typeProperties_dataLakeStoreUri": {
			"type": "string",
			"defaultValue": "https://storagefordatalake.azuredatalakestore.net/webhdfs/v1"
		},
		"StorageForDataLake_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "ea2972ca-bff1-4bbd-a073-1f00e6c9449c"
		},
		"StorageForDataLake_properties_typeProperties_subscriptionId": {
			"type": "string",
			"defaultValue": "6061fb8b-fd83-4e4f-b20f-043475d6acac"
		},
		"StorageForDataLake_properties_typeProperties_resourceGroupName": {
			"type": "string",
			"defaultValue": "RG-Svastara"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PartsUnlimited')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('PartsUnlimited_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/StorageForDataLake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "bla",
				"annotations": [],
				"type": "AzureDataLakeStore",
				"typeProperties": {
					"dataLakeStoreUri": "[parameters('StorageForDataLake_properties_typeProperties_dataLakeStoreUri')]",
					"tenant": "[parameters('StorageForDataLake_properties_typeProperties_tenant')]",
					"subscriptionId": "[parameters('StorageForDataLake_properties_typeProperties_subscriptionId')]",
					"resourceGroupName": "[parameters('StorageForDataLake_properties_typeProperties_resourceGroupName')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "StorageForDataLake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureDataLakeStoreLocation"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/StorageForDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Final')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "StorageForDataLake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureDataLakeStoreLocation"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/StorageForDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLCategories')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PartsUnlimited",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CategoryId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "Description",
						"type": "nvarchar"
					},
					{
						"name": "ImageUrl",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Categories"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PartsUnlimited')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data from SQL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select TOP 5 * from dbo.categories",
								"queryTimeout": "00:01:00",
								"isolationLevel": "ReadUncommitted",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureDataLakeStoreWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CategoryId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"type": "Int32",
											"physicalType": "Int32",
											"ordinal": 1
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 2
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 3
										}
									},
									{
										"source": {
											"name": "ImageUrl",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 4
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SQLCategories",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Final",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "WebHook1",
						"type": "WebHook",
						"dependsOn": [
							{
								"activity": "Copy data from SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"url": "https://3c332a2c-ec79-4f57-8ebe-fa1b4db76182.webhook.we.azure-automation.net/webhooks?token=nTiqbMWcj4zhnjpcL6bN1bCJlfG8x4jy0fJ6nyv3zqs%3d",
							"method": "POST",
							"headers": {},
							"body": {},
							"timeout": "00:10:00",
							"reportStatusOnCallBack": true
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQLCategories')]",
				"[concat(variables('factoryId'), '/datasets/Final')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "00:01:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureDataLakeStoreWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CategoryId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"type": "Int32",
											"physicalType": "Int32",
											"ordinal": 1
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 2
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 3
										}
									},
									{
										"source": {
											"name": "ImageUrl",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 4
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SQLCategories",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Final",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQLCategories')]",
				"[concat(variables('factoryId'), '/datasets/Final')]"
			]
		}
	]
}